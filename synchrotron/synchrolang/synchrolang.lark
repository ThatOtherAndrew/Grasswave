%import common.DIGIT
%import common.SIGNED_INT
%import common.SIGNED_FLOAT
%import common.ESCAPED_STRING
%import common.LETTER
%import common.CNAME
%import common.NEWLINE -> _NEWLINE
%import python.atom

%import common.WS_INLINE
%ignore WS_INLINE


UPPERCASE_NAME: "A".."Z" ("_" | LETTER | DIGIT)*
LOWERCASE_NAME: "a".."z" ("_" | LETTER | DIGIT)*

// Literal values
BOOLEAN: "True"i | "False"i

?value: SIGNED_INT                 -> int
      | SIGNED_FLOAT               -> float
      | ESCAPED_STRING             -> string
      | BOOLEAN                    -> bool
      | "[" (value ","?)* "]"      -> array
      | ("None"i | "null"i | "_")  -> none
      | "$" CNAME                  -> global_var

// Node instantiation
node_class: UPPERCASE_NAME
arguments: (value ","?)*
keyword_arguments: (CNAME "=" value ","?)*
node_init: LOWERCASE_NAME "=" node_class "(" arguments keyword_arguments ")"

// Graph elements
node: LOWERCASE_NAME
port: node "." CNAME
input: port
output: port
connection: output "->" input

?element: (node | port | connection)

// Commands
?expression: (value | node_class | node | port | connection)

?command: "start"i                                             -> start
        | "stop"i                                              -> stop
        | ("export"i | "save"i)                                -> export
        | ["create"i | "new"i | "let"i]            node_init   -> create
        | ("link"i | "connect"i | "attach"i)       connection  -> link
        | ("unlink"i | "disconnect"i | "detach"i)  element     -> unlink
        | ("remove"i | "delete"i)                  node        -> remove
        | ["eval"i | "get"i | "query"i]            expression

_COMMAND_DELIMITER: ";" _NEWLINE? | _NEWLINE
script: _NEWLINE? [command (_COMMAND_DELIMITER command)* _COMMAND_DELIMITER?]
?start: script
